(function (global, factory) {
	typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core')) :
	typeof define === 'function' && define.amd ? define('ngx-webstorage-service', ['exports', '@angular/core'], factory) :
	(factory((global.ngxWebstorageService = {}),global.ng.core));
}(this, (function (exports,core) { 'use strict';

/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0
THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.
See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */
/* global Reflect, Promise */
var extendStatics = Object.setPrototypeOf ||
    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
function __extends(d, b) {
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var ProxyStorageService = /** @class */ (function () {
    function ProxyStorageService(defaultTranscoder, subject) {
        this.defaultTranscoder = defaultTranscoder;
        this.subject = subject;
    }
    ProxyStorageService.prototype.has = function (key) {
        return this.subject.has(key);
    };
    ProxyStorageService.prototype.get = function (key, decoder) {
        return this.subject.get(key, decoder || this.defaultTranscoder);
    };
    ProxyStorageService.prototype.set = function (key, value, encoder) {
        this.subject.set(key, value, encoder || this.defaultTranscoder);
    };
    ProxyStorageService.prototype.remove = function (key) {
        this.subject.remove(key);
    };
    ProxyStorageService.prototype.clear = function () {
        this.subject.clear();
    };
    ProxyStorageService.prototype.withDefaultTranscoder = function (transcoder) {
        return new ProxyStorageService(transcoder, this.subject);
    };
    return ProxyStorageService;
}());
var BaseStorageService = /** @class */ (function () {
    function BaseStorageService(defaultTranscoder) {
        this.defaultTranscoder = defaultTranscoder;
    }
    BaseStorageService.prototype.get = function (key, decoder) {
        var value = this.getItem(key);
        return value !== undefined ? (decoder || this.defaultTranscoder).decode(value) : undefined;
    };
    BaseStorageService.prototype.set = function (key, value, encoder) {
        this.setItem(key, (encoder || this.defaultTranscoder).encode(value));
    };
    BaseStorageService.prototype.withDefaultTranscoder = function (transcoder) {
        return new ProxyStorageService(transcoder, this);
    };
    return BaseStorageService;
}());
var JsonStorageTranscoder = /** @class */ (function () {
    function JsonStorageTranscoder() {
    }
    JsonStorageTranscoder.prototype.encode = function (value) {
        return JSON.stringify(value);
    };
    JsonStorageTranscoder.prototype.decode = function (value) {
        try {
            return JSON.parse(value);
        }
        catch (error) {
            return undefined;
        }
    };
    return JsonStorageTranscoder;
}());
var StringStorageTranscoder = /** @class */ (function () {
    function StringStorageTranscoder() {
    }
    StringStorageTranscoder.prototype.encode = function (value) {
        return value;
    };
    StringStorageTranscoder.prototype.decode = function (value) {
        return value;
    };
    return StringStorageTranscoder;
}());
var BooleanStorageTranscoder = /** @class */ (function () {
    function BooleanStorageTranscoder() {
    }
    BooleanStorageTranscoder.prototype.encode = function (value) {
        return value.toString();
    };
    BooleanStorageTranscoder.prototype.decode = function (value) {
        if (value === 'true') {
            return true;
        }
        if (value === 'false') {
            return false;
        }
        return undefined;
    };
    return BooleanStorageTranscoder;
}());
var NumberStorageTranscoder = /** @class */ (function () {
    function NumberStorageTranscoder() {
    }
    NumberStorageTranscoder.prototype.encode = function (value) {
        return value.toString();
    };
    NumberStorageTranscoder.prototype.decode = function (value) {
        var parsedNumber = Number(value);
        return Number.isFinite(parsedNumber) ? parsedNumber : undefined;
    };
    return NumberStorageTranscoder;
}());
var StorageTranscoders = {
    JSON: (new JsonStorageTranscoder()),
    STRING: (new StringStorageTranscoder()),
    BOOLEAN: (new BooleanStorageTranscoder()),
    NUMBER: (new NumberStorageTranscoder())
};
var InMemoryStorageService = /** @class */ (function (_super) {
    __extends(InMemoryStorageService, _super);
    function InMemoryStorageService() {
        var _this = _super.call(this, StorageTranscoders.JSON) || this;
        _this.storage = new Map();
        return _this;
    }
    InMemoryStorageService.prototype.has = function (key) {
        return this.storage.has(key);
    };
    InMemoryStorageService.prototype.remove = function (key) {
        this.storage.delete(key);
    };
    InMemoryStorageService.prototype.clear = function () {
        this.storage.clear();
    };
    InMemoryStorageService.prototype.getItem = function (key) {
        if (!this.storage.has(key)) {
            return undefined;
        }
        return ((this.storage.get(key)));
    };
    InMemoryStorageService.prototype.setItem = function (key, value) {
        this.storage.set(key, value);
    };
    return InMemoryStorageService;
}(BaseStorageService));
var WebStorageService = /** @class */ (function (_super) {
    __extends(WebStorageService, _super);
    function WebStorageService(storage) {
        var _this = _super.call(this, StorageTranscoders.JSON) || this;
        _this.storage = storage;
        return _this;
    }
    WebStorageService.prototype.has = function (key) {
        return this.storage.getItem(key) !== null;
    };
    WebStorageService.prototype.remove = function (key) {
        this.storage.removeItem(key);
    };
    WebStorageService.prototype.clear = function () {
        this.storage.clear();
    };
    WebStorageService.prototype.getItem = function (key) {
        var value = this.storage.getItem(key);
        return value !== null ? value : undefined;
    };
    WebStorageService.prototype.setItem = function (key, value) {
        return this.storage.setItem(key, value);
    };
    return WebStorageService;
}(BaseStorageService));
function isStorageAvailable(storage) {
    if (!storage) {
        return false;
    }
    try {
        var now = Date.now();
        var testItemKey = "storage-test-entry-" + now;
        var testItemValue = "storage-test-value-" + now;
        storage.setItem(testItemKey, testItemValue);
        var retrievedItemValue = storage.getItem(testItemKey);
        storage.removeItem(testItemKey);
        return retrievedItemValue === testItemValue;
    }
    catch (error) {
        return false;
    }
}
var SESSION_STORAGE = new core.InjectionToken('SESSION_STORAGE');
var LOCAL_STORAGE = new core.InjectionToken('LOCAL_STORAGE');
function sessionStorageFactory() {
    if ((typeof sessionStorage) === 'undefined' || !isStorageAvailable(sessionStorage)) {
        return new InMemoryStorageService();
    }
    return new WebStorageService(sessionStorage);
}
function localStorageFactory() {
    if ((typeof localStorage) === 'undefined' || !isStorageAvailable(localStorage)) {
        return new InMemoryStorageService();
    }
    return new WebStorageService(localStorage);
}
var StorageServiceModule = /** @class */ (function () {
    function StorageServiceModule() {
    }
    return StorageServiceModule;
}());
StorageServiceModule.decorators = [
    { type: core.NgModule, args: [{
                providers: [
                    { provide: SESSION_STORAGE, useFactory: sessionStorageFactory },
                    { provide: LOCAL_STORAGE, useFactory: localStorageFactory }
                ]
            },] },
];

exports.BaseStorageService = BaseStorageService;
exports.InMemoryStorageService = InMemoryStorageService;
exports.ProxyStorageService = ProxyStorageService;
exports.JsonStorageTranscoder = JsonStorageTranscoder;
exports.StringStorageTranscoder = StringStorageTranscoder;
exports.BooleanStorageTranscoder = BooleanStorageTranscoder;
exports.NumberStorageTranscoder = NumberStorageTranscoder;
exports.StorageTranscoders = StorageTranscoders;
exports.WebStorageService = WebStorageService;
exports.isStorageAvailable = isStorageAvailable;
exports.SESSION_STORAGE = SESSION_STORAGE;
exports.LOCAL_STORAGE = LOCAL_STORAGE;
exports.sessionStorageFactory = sessionStorageFactory;
exports.localStorageFactory = localStorageFactory;
exports.StorageServiceModule = StorageServiceModule;

Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=ngx-webstorage-service.umd.js.map
